import{a2 as m,l as p}from"./app-4a17Pub4.js";import{p as a,c as _}from"./index-C163xbN1.js";import{m as l,r as u}from"./reorder-DWLP_Jze.js";const g=i=>{m.set(i.progress),i.progress===1&&m.done()},k=(i,d)=>({uploadAttachments:async(s,o)=>{const r=d().tasks[s.group_id].findIndex(t=>t.id===s.id);try{const{data:t}=await p.postForm(route("projects.tasks.attachments.upload",[s.project_id,s.id]),{attachments:o.filter(e=>e.id===void 0)},{onUploadProgress:g});return i(a(e=>{e.tasks[s.group_id][r].attachments=[...e.tasks[s.group_id][r].attachments,...t.files]}))}catch(t){console.error(t),alert("Failed to upload attachments")}},deleteAttachment:async(s,o)=>{const r=d().tasks[s.group_id].findIndex(t=>t.id===s.id);try{const t=d().tasks[s.group_id][r].attachments[o].id;return await p.delete(route("projects.tasks.attachments.destroy",[s.project_id,s.id,t]),{progress:!0}),i(a(e=>{e.tasks[s.group_id][r].attachments=[...e.tasks[s.group_id][r].attachments.filter(n=>n.id!==t)]}))}catch(t){console.error(t),alert("Failed to delete attachment")}}}),f=(i,d)=>({comments:[],fetchComments:async(s,o)=>{try{const{data:r}=await p.get(route("projects.tasks.comments",[s.project_id,s.id]));return o(),i(a(t=>{t.comments=r}))}catch(r){o(),console.error(r),alert("Failed to load comments")}},saveComment:async(s,o,r)=>{try{const{data:t}=await p.post(route("projects.tasks.comments.store",[s.project_id,s.id]),{content:o},{progress:!0});return r(),i(a(e=>{e.comments=[t.comment,...e.comments]}))}catch(t){r(),console.error(t),alert("Failed to save comment")}}}),F=i=>{let d=(i%60).toString();return d.length===1&&(d=`0${d}`),`${Math.floor(i/60)}:${d}`},x=i=>{if(i.includes(":"))return i.split(":")[0]*60+parseInt(i.split(":")[1]);if(i.includes(".")){let d=i.split(".")[1];return d.length===1&&(d+="0"),i.split(".")[0]*60+d*.6}else if(i.includes(",")){let d=i.split(",")[1];return d.length===1&&(d+="0"),i.split(",")[0]*60+d*.6}return i*60},w=i=>/^(\d{1,2}:[0-5]{1}[0-9]{1})$|^(\d{1,3}\.\d{0,2})$|^(\d{1,3},\d{0,2})$|^(\d{1,3})$/.test(i),h=(i,d)=>({saveTimeLog:async(s,o)=>{const r=d().tasks[s.group_id].findIndex(t=>t.id===s.id);try{const{data:t}=await p.post(route("projects.tasks.time-logs.store",[s.project_id,s.id]),{minutes:x(o)},{progress:!0});return i(a(e=>{e.tasks[s.group_id][r].time_logs=[...e.tasks[s.group_id][r].time_logs,t.timeLog]}))}catch(t){console.error(t),alert("Failed to save time log")}},deleteTimerLog:async(s,o)=>{const r=d().tasks[s.group_id].findIndex(t=>t.id===s.id);try{return await p.delete(route("projects.tasks.time-logs.destroy",[s.project_id,s.id,o]),{progress:!0}),i(a(t=>{t.tasks[s.group_id][r].time_logs=[...t.tasks[s.group_id][r].time_logs.filter(e=>e.id!==o)]}))}catch(t){console.error(t),alert("Failed to delete time log")}},startTimer:async s=>{const o=d().tasks[s.group_id].findIndex(r=>r.id===s.id);try{const{data:r}=await p.post(route("projects.tasks.time-logs.timer.start",[s.project_id,s.id]),{},{progress:!0});return i(a(t=>{t.tasks[s.group_id][o].time_logs=[...t.tasks[s.group_id][o].time_logs,r.timeLog]}))}catch(r){console.error(r),alert("Failed to start timer")}},stopTimer:async(s,o)=>{const r=d().tasks[s.group_id].findIndex(e=>e.id===s.id),t=d().tasks[s.group_id][r].time_logs.findIndex(e=>e.id===o);try{const{data:e}=await p.post(route("projects.tasks.time-logs.timer.stop",[s.project_id,s.id,o]),{},{progress:!0});return i(a(n=>{n.tasks[s.group_id][r].time_logs[t]={...e.timeLog}}))}catch(e){console.error(e),alert("Failed to stop timer")}}}),T=(i,d)=>({addTaskLocally:s=>i(a(o=>{o.tasks[s.group_id]=[s,...o.tasks[s.group_id]]})),updateTaskLocally:(s,o,r)=>i(a(t=>{const e=d().findTask(s),n=t.tasks[e.group_id].findIndex(c=>c.id===e.id);if(o==="group_id"&&e.group_id!==r){const c=l(t.tasks,e.group_id,r,n,0);t.tasks[e.group_id]=c[e.group_id],t.tasks[r]=c[r],t.tasks[r][0][o]=r}else t.tasks[e.group_id][n][o]=r})),removeTaskLocally:s=>i(a(o=>{const r=d().findTask(s);o.tasks[r.group_id]=o.tasks[r.group_id].filter(t=>t.id!==r.id)})),restoreTaskLocally:(s,o)=>i(a(r=>{r.tasks[s]=[o,...r.tasks[s]].sort((t,e)=>t.order_column>e.order_column?1:-1)})),addCommentLocally:s=>i(a(o=>{o.comments=[s,...o.comments]})),addAttachmentsLocally:s=>i(a(o=>{const r=d().findTask(s[0].task_id),t=o.tasks[r.group_id].findIndex(e=>e.id===r.id);o.tasks[r.group_id][t].attachments=[...o.tasks[r.group_id][t].attachments,...s]})),removeAttachmentLocally:(s,o)=>i(a(r=>{const t=d().findTask(s),e=r.tasks[t.group_id].findIndex(n=>n.id===s);r.tasks[t.group_id][e].attachments=r.tasks[t.group_id][e].attachments.filter(n=>n.id!==o)})),addTimeLogLocally:s=>i(a(o=>{const r=d().findTask(s.task_id),t=o.tasks[r.group_id].findIndex(e=>e.id===r.id);o.tasks[r.group_id][t].time_logs=[...o.tasks[r.group_id][t].time_logs,s]})),removeTimeLogLocally:(s,o)=>i(a(r=>{const t=d().findTask(s),e=r.tasks[t.group_id].findIndex(n=>n.id===s);r.tasks[t.group_id][e].time_logs=r.tasks[t.group_id][e].time_logs.filter(n=>n.id!==o)})),reorderTaskLocally:(s,o,r)=>{const t=u(d().tasks[s],o,r);return i(a(e=>{e.tasks[s]=t}))},moveTaskLocally:(s,o,r,t)=>{const e=l(d().tasks,s,o,r,t);return i(a(n=>{n.tasks[s]=e[s],n.tasks[o]=e[o],n.tasks[o][t]={...n.tasks[o][t],group_id:o}}))}}),y=_((i,d)=>({...k(i,d),...h(i,d),...f(i),...T(i,d),tasks:{},setTasks:s=>i(()=>({tasks:{...s}})),addTask:s=>i(a(o=>{o.tasks[s.group_id].findIndex(t=>t.id===s.id)===-1&&(o.tasks[s.group_id]=[...o.tasks[s.group_id],s])})),findTask:s=>{for(const o in d().tasks){const r=d().tasks[o].find(t=>t.id===s);if(r)return r}return null},updateTaskProperty:async(s,o,r,t=null)=>{try{return await p.put(route("projects.tasks.update",[s.project_id,s.id]),{[o]:r},{progress:!1}),i(a(e=>{const n=e.tasks[s.group_id].findIndex(c=>c.id===s.id);if(o==="group_id"&&s.group_id!==r){const c=l(e.tasks,s.group_id,r,n,0);e.tasks[s.group_id]=c[s.group_id],e.tasks[r]=c[r],e.tasks[r][0][o]=r}else e.tasks[s.group_id][n][o]=t||r}))}catch(e){console.error(e),alert("Failed to save task property change")}},complete:(s,o)=>{const r=o?!0:null,t=d().tasks[s.group_id].findIndex(e=>e.id===s.id);return p.post(route("projects.tasks.complete",[s.project_id,s.id]),{completed:o}).catch(()=>alert("Failed to save task completed action")),i(a(e=>{e.tasks[s.group_id][t].completed_at=r}))},reorderTask:(s,o)=>{const r=+s.droppableId.split("-")[1],t=u(d().tasks[r],s.index,o.index),e={ids:t.map(n=>n.id),group_id:r,from_index:s.index,to_index:o.index};return p.post(route("projects.tasks.reorder",[route().params.project]),e,{progress:!1}).catch(()=>alert("Failed to save task reorder action")),i(a(n=>{n.tasks[r]=t}))},moveTask:(s,o)=>{const r=+s.droppableId.split("-")[1],t=+o.droppableId.split("-")[1],e=l(d().tasks,r,t,s.index,o.index),n={ids:e[t].map(c=>c.id),from_group_id:r,to_group_id:t,from_index:s.index,to_index:o.index};return p.post(route("projects.tasks.move",[route().params.project]),n,{progress:!1}).catch(()=>alert("Failed to save task move action")),i(a(c=>{c.tasks[r]=e[r],c.tasks[t]=e[t]}))}})),S=y;export{F as h,w as i,S as u};
